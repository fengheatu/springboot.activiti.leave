<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.river.dao.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.river.model.po.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_en_name" property="roleEnName" jdbcType="VARCHAR" />
    <result column="role_cn_name" property="roleCnName" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="BIGINT" />
    <result column="gm_create" property="gmCreate" jdbcType="TIMESTAMP" />
    <result column="gm_modified" property="gmModified" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_en_name, role_cn_name, create_by, update_by, gm_create, gm_modified, is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.river.model.po.Role" >
    insert into role (id, role_en_name, role_cn_name, 
      create_by, update_by, gm_create, 
      gm_modified, is_delete)
    values (#{id,jdbcType=BIGINT}, #{roleEnName,jdbcType=VARCHAR}, #{roleCnName,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}, #{gmCreate,jdbcType=TIMESTAMP}, 
      #{gmModified,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.river.model.po.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleEnName != null" >
        role_en_name,
      </if>
      <if test="roleCnName != null" >
        role_cn_name,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="gmCreate != null" >
        gm_create,
      </if>
      <if test="gmModified != null" >
        gm_modified,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleEnName != null" >
        #{roleEnName,jdbcType=VARCHAR},
      </if>
      <if test="roleCnName != null" >
        #{roleCnName,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="gmCreate != null" >
        #{gmCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmModified != null" >
        #{gmModified,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.river.model.po.Role" >
    update role
    <set >
      <if test="roleEnName != null" >
        role_en_name = #{roleEnName,jdbcType=VARCHAR},
      </if>
      <if test="roleCnName != null" >
        role_cn_name = #{roleCnName,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="gmCreate != null" >
        gm_create = #{gmCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmModified != null" >
        gm_modified = #{gmModified,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.river.model.po.Role" >
    update role
    set role_en_name = #{roleEnName,jdbcType=VARCHAR},
      role_cn_name = #{roleCnName,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      gm_create = #{gmCreate,jdbcType=TIMESTAMP},
      gm_modified = #{gmModified,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>